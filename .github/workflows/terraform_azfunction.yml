name: "Terraform + Azure Function"

env:
  ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}
  AZURE_FUNCTIONAPP_NAME: "GetResumeCounter-v5"   # Ensure this matches your function app name
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "backend/api"    # Path to your function app project
  DOTNET_VERSION: "8.0.x"                          # Set this to your dotnet version

on:
  push:
    branches: ["main"]

permissions:
  contents: read
  actions: write
  id-token: write

jobs:
  terraform:
    name: "Terraform Deploy"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login with Service Principal
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          creds: |
            {
              "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}",
              "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}",
              "tenantId": "${{ secrets.AZURE_TENANT_ID }}",
              "clientId": "${{ secrets.AZURE_CLIENT_ID }}"
            }

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.2"

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Plan
        run: terraform plan
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform

  azfunction:
    name: "Azure Function Deploy"
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} # Use the AZURE_CREDENTIALS secret here

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Resolve Project Dependencies Using Dotnet
        run: |
          pushd '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet restore
          dotnet build --configuration Release --output ./output
          popd

      - name: Deploy to Azure Function App
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
